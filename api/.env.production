# Base Framework Production Configuration for games-api.base.al
# This file contains production-ready settings

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

APP_VERSION=1.0.0
ENV=production

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

SERVER_ADDRESS=0.0.0.0
SERVER_PORT=8100
APPHOST=https://games-api.base.al

# CORS configuration - Allow game clients
CORS_ALLOWED_ORIGINS=https://multiplex.base.al,https://games.base.al,https://base.al

# =============================================================================
# MIDDLEWARE CONFIGURATION
# =============================================================================

# Global middleware settings
MIDDLEWARE_API_KEY_ENABLED=true
MIDDLEWARE_API_KEY_SKIP_PATHS=/health,/,/docs,/docs/swagger.json
MIDDLEWARE_AUTH_ENABLED=true
MIDDLEWARE_AUTH_SKIP_PATHS=/api/auth/login,/api/auth/register,/api/auth/forgot-password,/health
MIDDLEWARE_RATE_LIMIT_ENABLED=true
MIDDLEWARE_RATE_LIMIT_REQUESTS=100
MIDDLEWARE_RATE_LIMIT_WINDOW=1m
MIDDLEWARE_RATE_LIMIT_SKIP_PATHS=/health,/
MIDDLEWARE_LOGGING_ENABLED=true
MIDDLEWARE_LOGGING_SKIP_PATHS=/health
MIDDLEWARE_RECOVERY_ENABLED=true
MIDDLEWARE_CORS_ENABLED=true

# Per-endpoint middleware overrides - Games endpoints require auth
MIDDLEWARE_OVERRIDES={"api/multiplex/*": {"auth": "enabled", "api_key": "disabled"}}

# =============================================================================
# FEATURE TOGGLES
# =============================================================================

# Disable Swagger in production for security
SWAGGER_ENABLED=false

# Enable WebSocket functionality
WS_ENABLED=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# IMPORTANT: Generate strong secrets for production!
# Use: openssl rand -base64 32
JWT_SECRET=CHANGE_THIS_TO_SECURE_SECRET_IN_PRODUCTION
API_KEY=CHANGE_THIS_TO_SECURE_API_KEY_IN_PRODUCTION

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

DB_DRIVER=mysql

# Production MySQL settings
DB_HOST=localhost
DB_PORT=3306
DB_USER=base_games
DB_PASSWORD=CHANGE_THIS_PASSWORD
DB_NAME=base_games

# For managed databases, use full URL:
# DB_URL=mysql://user:password@host:3306/database

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

EMAIL_PROVIDER=smtp
EMAIL_FROM_ADDRESS=noreply@base.al

# SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_smtp_username
SMTP_PASSWORD=your_smtp_password

# Or use SendGrid/Postmark:
# EMAIL_PROVIDER=sendgrid
# SENDGRID_API_KEY=your_api_key

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Use S3-compatible storage in production
STORAGE_PROVIDER=s3
STORAGE_API_KEY=your_s3_access_key
STORAGE_API_SECRET=your_s3_secret_key
STORAGE_ENDPOINT=https://s3.amazonaws.com
STORAGE_REGION=us-east-1
STORAGE_BUCKET=games-api-storage
STORAGE_PUBLIC_URL=https://cdn.games-api.base.al

# File restrictions
STORAGE_MAX_SIZE=10485760
STORAGE_ALLOWED_EXT=.jpg,.jpeg,.png,.gif,.pdf,.doc,.docx,.txt,.zip

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

LOG_LEVEL=info

# =============================================================================
# NOTES
# =============================================================================
# 1. Change all CHANGE_THIS_* values before deploying
# 2. Use environment variables or secrets management for sensitive data
# 3. Enable SSL/TLS for database connections in production
# 4. Set up monitoring and alerting
# 5. Configure backup strategies for database and storage
# 6. Use CDN for static assets
# 7. Set up rate limiting at reverse proxy level (nginx/traefik)
